name: Build TDLib

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tdlib_version:
        description: 'TDLib version or branch'
        required: true
        default: 'master'

jobs:
  build:
    strategy:
      matrix:
        build_type: [Debug, Release, RelWithDebInfo]
    runs-on: windows-latest
    
    steps:
    - name: Checkout TDLib
      uses: actions/checkout@v4.2.2
      with:
        repository: tdlib/td
        ref: ${{ github.event.inputs.tdlib_version }}
        submodules: recursive

    - name: Cache vcpkg
      uses: actions/cache@v3.4.3
      env:
        cache-name: cache-vcpkg
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          !${{ github.workspace }}/vcpkg/buildtrees
          !${{ github.workspace }}/vcpkg/packages
          !${{ github.workspace }}/vcpkg/downloads
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Setup and build vcpkg
      env:
        VCPKG_MAX_CONCURRENCY: 4
      run: |
        if (!(Test-Path vcpkg)) {
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.bat
        } else {
          cd vcpkg
        }
        ./vcpkg.exe install gperf:x64-windows openssl:x64-windows zlib:x64-windows

    - name: Cache TDLib build
      uses: actions/cache@v3.4.3
      env:
        cache-name: cache-tdlib-build
      with:
        path: |
          ${{ github.workspace }}/build
          ${{ github.workspace }}/tdlib
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ matrix.build_type }}-${{ github.event.inputs.tdlib_version }}-${{ hashFiles('**/*.cpp', '**/*.h', '**/CMakeLists.txt') }}

    - name: Configure and Build TDLib
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 4
      run: |
        if (!(Test-Path build) -or !(Test-Path tdlib)) {
          Remove-Item build -Force -Recurse -ErrorAction SilentlyContinue
          mkdir build
          cd build
          cmake -A x64 -DCMAKE_INSTALL_PREFIX:PATH=../tdlib -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
          cmake --build . --target install --config ${{ matrix.build_type }} --parallel 4
        } else {
          echo "Using cached TDLib build for ${{ matrix.build_type }}"
        }

    - name: List TDLib files
      run: |
        Get-ChildItem -Path tdlib -Recurse
        Get-ChildItem -Path build/tdlib -Recurse

    - name: Upload artifacts
      uses: actions/upload-artifact@v4.6.1
      with:
        name: tdlib-${{ matrix.build_type }}
        path: |
          tdlib/**/*
          build/tdlib/**/*
